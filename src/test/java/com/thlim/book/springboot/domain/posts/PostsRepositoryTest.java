package com.thlim.book.springboot.domain.posts;

import org.junit.*;
import org.junit.runner.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@SpringBootTest // H2 database를 자동 실행해줌
public class PostsRepositoryTest {

    @Autowired
    PostsRepository postsRepository;

    @After // 모든 테스트 후 실행
    // 단위 테스트 끝 마다 수행되는 메소드 지정
    // 보통 베포 전 전체 테스트 수행 시 테스트 간 데이터 침범 막기 위해 사용
    // 여러 테스트 동시 수행 시 데이터가 남아있어 다음 테스트가 실패할 수 있음
    public void cleanUp() {
        postsRepository.deleteAll();
    }

    @Test
    public void 게시글저장_불러오기() {
        // given
        String title = "테스트 게시글";
        String content = "테스트 본문";
        // insert or update
        postsRepository.save(Posts.builder().title(title).content(content).author("ith13579@korea.ac.kr").build());

        // when
        // 모든 데이터 조회
        List<Posts> postsList = postsRepository.findAll();

        // then

        Posts post = postsList.get(0);
        assertThat(post.getTitle()).isEqualTo(title);
        assertThat(post.getContent()).isEqualTo(content);

    }

    /**
     * Hibernate: drop table posts if exists
     * Hibernate: create table posts (id bigint generated by default as identity, author varchar(255), content TEXT not null, title varchar(500) not null, primary key (id))
     * insert into posts (id, author, content, title) values (null, ?, ?, ?)
     */

}